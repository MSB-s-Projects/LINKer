/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about/route'
import { Route as IndexRouteImport } from './routes/index/route'
import { Route as AuthSignupRouteImport } from './routes/auth/signup/route'
import { Route as AuthLoginRouteImport } from './routes/auth/login/route'

// Create Virtual Routes

const IndexComponentsHeroLazyImport = createFileRoute(
  '/index/components/hero',
)()
const IndexComponentsFeaturesLazyImport = createFileRoute(
  '/index/components/features',
)()

// Create/Update Routes

const AboutRouteRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRouteRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRouteRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRouteRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexComponentsHeroLazyRoute = IndexComponentsHeroLazyImport.update({
  id: '/index/components/hero',
  path: '/index/components/hero',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/index/components/hero.lazy').then((d) => d.Route),
)

const IndexComponentsFeaturesLazyRoute =
  IndexComponentsFeaturesLazyImport.update({
    id: '/index/components/features',
    path: '/index/components/features',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/index/components/features.lazy').then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRoute
    }
    '/index/components/features': {
      id: '/index/components/features'
      path: '/index/components/features'
      fullPath: '/index/components/features'
      preLoaderRoute: typeof IndexComponentsFeaturesLazyImport
      parentRoute: typeof rootRoute
    }
    '/index/components/hero': {
      id: '/index/components/hero'
      path: '/index/components/hero'
      fullPath: '/index/components/hero'
      preLoaderRoute: typeof IndexComponentsHeroLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRouteRoute
  '/about': typeof AboutRouteRoute
  '/auth/login': typeof AuthLoginRouteRoute
  '/auth/signup': typeof AuthSignupRouteRoute
  '/index/components/features': typeof IndexComponentsFeaturesLazyRoute
  '/index/components/hero': typeof IndexComponentsHeroLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRouteRoute
  '/about': typeof AboutRouteRoute
  '/auth/login': typeof AuthLoginRouteRoute
  '/auth/signup': typeof AuthSignupRouteRoute
  '/index/components/features': typeof IndexComponentsFeaturesLazyRoute
  '/index/components/hero': typeof IndexComponentsHeroLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRouteRoute
  '/about': typeof AboutRouteRoute
  '/auth/login': typeof AuthLoginRouteRoute
  '/auth/signup': typeof AuthSignupRouteRoute
  '/index/components/features': typeof IndexComponentsFeaturesLazyRoute
  '/index/components/hero': typeof IndexComponentsHeroLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/auth/login'
    | '/auth/signup'
    | '/index/components/features'
    | '/index/components/hero'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/auth/login'
    | '/auth/signup'
    | '/index/components/features'
    | '/index/components/hero'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/auth/login'
    | '/auth/signup'
    | '/index/components/features'
    | '/index/components/hero'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRouteRoute: typeof IndexRouteRoute
  AboutRouteRoute: typeof AboutRouteRoute
  AuthLoginRouteRoute: typeof AuthLoginRouteRoute
  AuthSignupRouteRoute: typeof AuthSignupRouteRoute
  IndexComponentsFeaturesLazyRoute: typeof IndexComponentsFeaturesLazyRoute
  IndexComponentsHeroLazyRoute: typeof IndexComponentsHeroLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRouteRoute: IndexRouteRoute,
  AboutRouteRoute: AboutRouteRoute,
  AuthLoginRouteRoute: AuthLoginRouteRoute,
  AuthSignupRouteRoute: AuthSignupRouteRoute,
  IndexComponentsFeaturesLazyRoute: IndexComponentsFeaturesLazyRoute,
  IndexComponentsHeroLazyRoute: IndexComponentsHeroLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/auth/login",
        "/auth/signup",
        "/index/components/features",
        "/index/components/hero"
      ]
    },
    "/": {
      "filePath": "index/route.tsx"
    },
    "/about": {
      "filePath": "about/route.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login/route.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup/route.tsx"
    },
    "/index/components/features": {
      "filePath": "index/components/features.lazy.tsx"
    },
    "/index/components/hero": {
      "filePath": "index/components/hero.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
